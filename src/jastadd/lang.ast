/**
	Program
**/
Program  ::= Clause* /FormalPredicate*/; 

/**
   Clause 
**/
abstract Clause ::= Heads:InclusiveLiteral*;
Rule:Clause ::=  Body:Literal*;
Fact:Clause;

/**
   Literals 
**/
abstract Literal ::= Predicate:PredicateSymbol;
abstract InclusiveLiteral:Literal;
abstract ExclusiveLiteral:Literal;
abstract BinaryExclusiveTermLiteral:ExclusiveLiteral ::= Left:Term Right:Term;

Atom:InclusiveLiteral       ::= Terms:Term*;
EDBLiteral:InclusiveLiteral ::= PredicateRef FileLoc:Term;
NEGLiteral:ExclusiveLiteral ::= InclusiveLiteral;
EQLiteral:BinaryExclusiveTermLiteral;
NEQLiteral:BinaryExclusiveTermLiteral;
LTLiteral:BinaryExclusiveTermLiteral;
LTELiteral:BinaryExclusiveTermLiteral;
GTLiteral:BinaryExclusiveTermLiteral;
GTELiteral:BinaryExclusiveTermLiteral;
/**
    Terms
**/
abstract Term;
abstract Constant:Term;

Variable:Term           ::= <VAR_ID>;
PredicateRef:Term       ::= <PRED_ID>;
StringConstant:Constant ::= <STRING>;
IntConstant:Constant    ::= <NUMERAL>;

/**
    PredicateSymbols
**/
FormalPredicate ::= <PRED_ID>;
PredicateSymbol ::= <PRED_ID>;